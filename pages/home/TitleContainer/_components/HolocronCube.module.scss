@use 'sass:math';

$CubeSize: 10vw;

.Wrapper {
  // Shape
  perspective: 1000px;
  perspective-origin: 50% 50%;
  pointer-events: none;
}

.Cube {
  // Position
  position: relative;
  margin: auto;

  // Shape
  height: $CubeSize;
  width: $CubeSize;
  transform-style: preserve-3d;

  // Animation
  animation: Rotate 20s infinite linear;

  * {
    // Position
    position: absolute;

    // Shape
    shape-rendering: geometricprecision;
    box-sizing: border-box;
    height: $CubeSize;
    width: $CubeSize;
  }
}

.Front {
  transform: translateZ(math.div($CubeSize, 2));
}

.Back {
  transform: translateZ(-(math.div($CubeSize, 2))) rotateY(180deg);
}

.Right {
  transform: rotateY(-270deg) translateX(math.div($CubeSize, 2));
  transform-origin: top right;
}

.Left {
  transform: rotateY(270deg) translateX(-(math.div($CubeSize, 2)));
  transform-origin: center left;
}

.Top {
  transform: rotateX(270deg) translateY(-(math.div($CubeSize, 2)));
  transform-origin: top center;
}

.Bottom {
  transform: rotateX(-270deg) translateY(math.div($CubeSize, 2));
  transform-origin: bottom center;
}

@keyframes Rotate {
  from {
    transform: rotateX(-10deg) rotateY(0deg);
  }

  to {
    transform: rotateX(-10deg) rotateY(360deg);
  }
}

.Shadow {
  // Position
  position: relative;
  margin: calc($CubeSize * 0.3) auto;
  transform: rotateX(-240deg);
  z-index: -1;

  // Shape
  width: 0;
  height: 0;

  // Colour
  box-shadow: 0 0 calc($CubeSize * 0.6) calc($CubeSize * 0.5) #10b6f4;
  opacity: 0.9;

  // Animation
  animation: shadow 20s infinite linear;
}

@keyframes Shadow {
  from {
    transform: rotateX(80deg) rotateZ(0deg);
  }

  to {
    transform: rotateX(80deg) rotateZ(-360deg);
  }
}
