@use 'sass:math';

$cubeSize: 10vw;

.wrapper {
  perspective: 1000px;
  perspective-origin: 50% 50%;
  user-select: none;
}

.cube {
  margin: auto;
  position: relative;
  height: $cubeSize;
  width: $cubeSize;
  transform-style: preserve-3d;
  animation: rotate 20s infinite linear;
  user-select: none;

  * {
    position: absolute;
    box-sizing: border-box;
    height: $cubeSize;
    width: $cubeSize;
    shape-rendering: geometricPrecision;
    user-select: none;
  }
}

.front {
  transform: translateZ(math.div($cubeSize, 2));
}
.back {
  transform: translateZ(-(math.div($cubeSize, 2))) rotateY(180deg);
}
.right {
  transform: rotateY(-270deg) translateX(math.div($cubeSize, 2));
  transform-origin: top right;
}
.left {
  transform: rotateY(270deg) translateX(-(math.div($cubeSize, 2)));
  transform-origin: center left;
}
.top {
  transform: rotateX(-270deg) translateY(-(math.div($cubeSize, 2)));
  transform-origin: top center;
}
.bottom {
  transform: rotateX(270deg) translateY(math.div($cubeSize, 2));
  transform-origin: bottom center;
}

@keyframes rotate {
  from {
    transform: rotateX(-10deg) rotateY(0deg);
  }
  to {
    transform: rotateX(-10deg) rotateY(360deg);
  }
}

.shadow {
  position: relative;
  margin: calc($cubeSize * 0.2) auto;
  width: 0px;
  height: 0px;
  opacity: 0.9;
  box-shadow: 0 0 calc($cubeSize * 0.5) calc($cubeSize * 0.5) #10b6f4;
  animation: shadow 20s infinite linear;
  z-index: -1;
}

@keyframes shadow {
  0% {
    transform: rotateX(80deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(80deg) rotateZ(-360deg);
  }
}
