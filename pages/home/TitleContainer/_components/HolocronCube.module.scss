.Wrapper {
  // Responsive Design
  --cube-size: 10vw;
  @media screen and (max-width: 500px) {
    --cube-size: 5rem;
  }

  // Shape
  perspective: 1000px;
  perspective-origin: 50% 50%;
  pointer-events: none;
}

.Cube {
  // Position
  position: relative;
  margin: auto;

  // Shape
  height: var(--cube-size);
  width: var(--cube-size);
  transform-style: preserve-3d;

  // Animation
  animation: Rotate 20s infinite linear;

  * {
    // Position
    position: absolute;

    // Shape
    shape-rendering: geometricprecision;
    box-sizing: border-box;
    height: var(--cube-size);
    width: var(--cube-size);
  }
}

.Front {
  transform: translateZ(calc(var(--cube-size) / 2));
}

.Back {
  transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2));
}

.Right {
  transform: rotateY(-270deg) translateX(calc(var(--cube-size) / 2));
  transform-origin: top right;
}

.Left {
  transform: rotateY(270deg) translateX(calc(var(--cube-size) / 2 * -1));
  transform-origin: center left;
}

.Top {
  transform: rotateX(270deg) translateY(calc(var(--cube-size) / 2 * -1));
  transform-origin: top center;
}

.Bottom {
  transform: rotateX(-270deg) translateY(calc(var(--cube-size) / 2));
  transform-origin: bottom center;
}

@keyframes Rotate {
  from {
    transform: rotateX(-10deg) rotateY(0deg);
  }

  to {
    transform: rotateX(-10deg) rotateY(360deg);
  }
}

.Shadow {
  // Position
  position: relative;
  margin: calc(var(--cube-size) * 0.3) auto;
  transform: rotateX(-240deg);
  z-index: -1;

  // Shape
  width: 0;
  height: 0;

  // Colour
  box-shadow: 0 0 calc(var(--cube-size) * 0.6) calc(var(--cube-size) / 2) #10b6f4;
  opacity: 0.9;

  // Animation
  animation: shadow 20s infinite linear;
}

@keyframes Shadow {
  from {
    transform: rotateX(80deg) rotateZ(0deg);
  }

  to {
    transform: rotateX(80deg) rotateZ(-360deg);
  }
}
